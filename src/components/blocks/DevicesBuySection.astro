---
// components import
import RoboButton from '../utils/Button.astro';

// props
let {
  price = null,
  email = '',
  deviceUpdates = true,
  regularUpdates = false,
  location = `https://robonomics.network${Astro.url.pathname}`,
  gScript = import.meta.env.PUBLIC_CONTACTS_FORM_SCRIPT,
  siteKey = import.meta.env.PUBLIC_RECAPTCHA,
  status = 'init',
  tags = ['devices'],
  message = '',
} = Astro.props;



const buttonType = {
  ok: 'ok',
  error: 'error',
  na: 'na',
}[status] ?? 'primary';

const buttonText = {
  ok: 'Thanks for your submission!',
  error: 'Not submitted',
}[status] ?? 'Notify me when available';


function handleBeforeSubmit() {
  status = 'process';
  if (!regularUpdates) {
    tags.push('only-devices');
  }
}

function handleCaptchaError() {
  status = 'na';
  message = 'Captcha is not verified. Please, check your internet connection';
}

function handleOnSubmit(event) {
  event.preventDefault(); // Prevent default form submission behavior
  // Simulate API response
  const response = { result: 'success' }; // Replace with actual API logic
  status = response.result === 'success' ? 'ok' : 'error';
}
---

<div class="layout layout__content section-vivid-green">
  <slot />

  <section>
    {price && (
      <div class="price">
        <div class="price-number">{price}</div>
        <div class="price-desc">
          <div>Early bird price</div>
          <div>Coming in early 2025</div>
        </div>
      </div>
    )}

    <form id="gsp-form" on:submit={handleOnSubmit}>
      <label class="block">
        <input
          type="email"
          name="Email"
          value={email}
          placeholder="Your email"
          required
          class="block"
        />
      </label>
      <label class="block">
        <input
          type="checkbox"
          checked={deviceUpdates}
          disabled
        />
        <span>Get updates about smart devices</span>
      </label>
      <label class="block">
        <input
          type="checkbox"
          checked={regularUpdates}
        />
        <span>Receive regular emails from Robonomics</span>
      </label>

      <input type="hidden" name="Location" value={location} />
      <input type="hidden" name="Tags" value={tags.toString()} />

      <RoboButton
        type={buttonType}
        loading={status === 'process'}
        class="block"
      >
        {buttonText}
      </RoboButton>
      {message && <span>{message}</span>}
    </form>
  </section>
</div>

<style>
  .section-vivid-green {
    display: grid;
    grid-template-columns: 1.5fr 2fr;
    gap: calc(var(--space) * 2);
    align-items: center;
    margin-top: calc(var(--space) * 2);
    margin-bottom: calc(var(--space) * 2);
  }

  @media screen and (width < 600px) {
    .section-vivid-green {
      display: flex;
      flex-direction: column;
      gap: var(--space);
    }
  }

  section {
    max-width: 500px;
  }

  .price {
    display: flex;
    gap: var(--space);
    align-content: flex-start;
    margin-bottom: var(--space);
  }

  .price-number {
    font-variation-settings: var(--font-flex-bold);
    font-size: 3rem;
    line-height: 1;
  }

  .price-desc {
    font-variation-settings: var(--font-flex-medium);
  }
</style>
