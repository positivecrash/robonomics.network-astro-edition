---
import Button from '../utils/Button.astro';
const captchaKey = import.meta.env.PUBLIC_RECAPTCHA;

---

<div class="layout layout__content section-vivid-green">
  <img src="/images/devices/unitree-g1/unitree-g1.webp" alt="Humanoid Unitree" loading="lazy" />

  <section>
    <h2 class="title">Rent in California, USA</h2>
    <span class="availability block">Available by the Hour, Day, or Week</span>
    
    <form id="rental-form">
      <h-captcha id="signupCaptcha"
        site-key={captchaKey}
        size="invisible"
        tabindex="0"
        jsapi="https://js.hcaptcha.com/1/api.js?onload=onLoad" 
      >
      </h-captcha>
      <div class="price">
        <div class="price-actions">
          <label>
            <input 
              type="number"
              id="input-value"
              value="1"
              min="1"
              data-gsp-name="Time" 
            />
          </label>
          <select id="selected-unit">
            <option value="hour">Hour</option>
            <option value="hours">Hours</option>
            <option value="day" selected>Day</option>
            <option value="days">Days</option>
            <option value="week">Week</option>
            <option value="weeks">Weeks</option>
          </select>
        </div>
        <div class="price-number" id="price-number">$900</div>
      </div>

      <label class="block">
        <input name="email" type="email" id="email" placeholder="Your email" data-gsp-name="Email" required />
      </label>
      <label class="block">
        <input name="name" type="text" id="name" placeholder="Your name" data-gsp-name="Name" required />
      </label>
      <label class="block">
        <textarea name="comment" id="comment" placeholder="Your comment" data-gsp-name="Comment" required></textarea>
      </label>

      <input type="hidden" id="location" data-gsp-name="Location" />

      <Button type="primary" extraCls="form-button--main block">Contact me</Button>
      <Button type="na" loading extraCls="form-button--loading block hide disabled">Contact me</Button>
      <Button type="ok" extraCls="form-button--success block hide disabled">We'll get in touch shortly!</Button>
      <span class="agreement">
        By clicking this button, you agree to receive an email regarding the rental of the Unitree G1 Humanoid Robot.
      </span>
      <span id="message"></span>
    </form>
  </section>
</div>

<script>
  
(function(){
  let inputValue = 1;
  let selectedUnit = 'day';
  let price = 900;

  const inputEl = document.getElementById('input-value');
  const unitSelectEl = document.getElementById('selected-unit');
  const priceNumberEl = document.getElementById('price-number');
  const locationEl = document.getElementById('location');
  const form = document.getElementById('rental-form');
  const signupCaptcha = document.getElementById('signupCaptcha');
  const mainBtn = document.querySelector('.form-button--main');
  const loadingBtn = document.querySelector('.form-button--loading');
  const successBtn = document.querySelector('.form-button--success');

  // Set the location hidden input using the current URL
  locationEl.value = window.location.href;

  // Helper: update the price based on current input and unit
  function updatePrice() {
    if(selectedUnit === 'hour' || selectedUnit === 'hours'){
      price = inputValue * 200;
    } else if(selectedUnit === 'day' || selectedUnit === 'days'){
      price = inputValue * 900;
    } else {
      price = 'on demand';
      priceNumberEl?.classList.add('on-demand')
    }
    priceNumberEl.textContent = typeof price === 'number' ? `$${price}` : price;
  }

  // Handle changes on the number input field
  inputEl.addEventListener('input', function(event){
    const rawValue = event.target.value;
    // Allow only digits
    if (/^\d*$/.test(rawValue)) {
      inputValue = rawValue === '' ? '' : parseInt(rawValue, 10);
      if (inputValue && inputValue > 0) {
        if (selectedUnit === 'hour' || selectedUnit === 'hours') {
          if (inputValue === 1) {
            selectedUnit = 'hour';
          } else if (inputValue <= 23) {
            selectedUnit = 'hours';
          } else {
            inputValue = Math.ceil(inputValue / 24);
            selectedUnit = inputValue === 1 ? 'day' : 'days';
          }
        } else if (selectedUnit === 'day' || selectedUnit === 'days') {
          if (inputValue === 1) {
            selectedUnit = 'day';
          } else if (inputValue <= 7) {
            selectedUnit = 'days';
          } else {
            inputValue = Math.ceil(inputValue / 7);
            selectedUnit = inputValue === 1 ? 'week' : 'weeks';
          }
        } else if (selectedUnit === 'week' || selectedUnit === 'weeks') {
          selectedUnit = inputValue === 1 ? 'week' : 'weeks';
        }
        // update the select element value
        unitSelectEl.value = selectedUnit;
        event.target.value = inputValue;
      }
    }
    updatePrice();
  });

  // Ensure value is at least 1 when input loses focus
  inputEl.addEventListener('blur', function(){
    if (!inputValue || inputValue < 1) {
      inputValue = 1;
      inputEl.value = 1;
      updatePrice();
    }
  });

  // Handle changes on the select for unit
  unitSelectEl.addEventListener('change', function(event){
    selectedUnit = event.target.value;
    updatePrice();
  });


  // form submit
  const sendData = async (request) => {
    const GSCRIPT_ID =  import.meta.env.PUBLIC_RENT_KEY;
    let response = await fetch( 'https://script.google.com/macros/s/' + GSCRIPT_ID + '/exec',
    {
      method: 'POST',
      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
      body: request
    })

    if (response.ok) {
        return true
    } else {
      return response.status
    }
  }

  form.addEventListener('submit', (e)=>{
    e.preventDefault();
    signupCaptcha.execute();
    mainBtn?.classList.add('hide')
    loadingBtn?.classList.remove('hide');

  })

  signupCaptcha?.addEventListener('verified', async (e) => {
		let response = '',

		data = form.querySelectorAll('[data-gsp-name]');

		data.forEach(function(item, index, array) {

			if (response != '') {
				response += '&'
			}

			response += item.dataset.gspName === 'Time' ? item.dataset.gspName + '=' + `${encodeURIComponent(inputValue)} ${encodeURIComponent(selectedUnit)}` : item.dataset.gspName + '=' + encodeURIComponent(item.value)
		});

	 await sendData(response)

   loadingBtn?.classList.add('hide')
   successBtn?.classList.remove('hide');
	});

	signupCaptcha?.addEventListener('error', (e) => {
		console.log('error event', {error: e.error});
    document.querySelector('#message').textContent = e.error;
	});


})();
</script>

<script is:inline src="/library/vanilla-hcaptcha.js"></script>

<style is:global>
  button.hide {
    display: none !important;
  }
</style>

<style>

  h2 {
    margin-bottom: 0;
    font-size: calc(var(--base-font-size) * 1.2);
    font-variation-settings: var(--font-flex-extrabold);
    text-align: left;
  }

  section {
   max-width: 500px;
  }

  input {
    width: 100%;
    min-height: 48px;
  }

  textarea {
    width: 100%;
    min-height: 90px;
    height: 100%;
    resize: none;
  }

  input::placeholder, textarea::placeholder {
    padding-left: 10px;
    color: #b3b3b3;
  }

 .section-vivid-green {
    display: grid;
    grid-template-columns: 1.5fr 2fr;
    gap: calc(var(--space) * 2);
    align-items: center;
    margin-top: calc(var(--space) * 2);
    margin-bottom: calc(var(--space) * 2);
 }

 .availability {
  font-size: calc(var(--base-font-size) * 0.75);
  font-variation-settings: 'wght' 500, 'wdth' 100, 'opsz' 26, 'XTRA' 468, 'XOPQ' 96, 'YOPQ' 79, 'YTAS' 750, 'YTDE' -203, 'YTFI' 738, 'YTLC' 514, 'YTUC' 712,  'slnt' -10;
  letter-spacing: 1px;
  text-transform: uppercase;
  margin-bottom: var(--space);
 }

 .price {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: var(--space);
    align-content: flex-start;
    margin-bottom: 10px;
  }

 .price-actions {
  display: flex;
  align-items: center;
 }

 .price-actions input {
  display: inline-block;
  max-width: 60px;
  min-height: 44px;
  margin-right: calc(var(--space) * 0.3);
  text-align: center;
 }

 .price-actions select {
  background-color: transparent;
  border: 1px solid transparent;
  text-transform: uppercase;
  text-align: right;
  cursor: pointer;
 }

 .price-number {
    font-variation-settings: var(--font-flex-extrabold);
    font-size: 3rem;
    line-height: 1;
  }


  .price-number.on-demand {
    font-size: 2rem;
    text-transform: uppercase;
  }

  .agreement {
    display: block;
    max-width: 456px;
    font-size: calc(var(--base-font-size) * 0.8);
  }


 @media screen and (max-width: 620px) {
    .section-vivid-green {
     display: flex;
     flex-direction: column;
     gap: var(--space);
     padding-bottom: 3rem;
    }

    h2 {
      text-align: center;
    }

    .availability {
      text-align: center;
    }

    .price {
      flex-direction: column-reverse;
      justify-content: center;
      align-items: center;
      gap: calc(var(--space) * 0.5);
      margin-bottom: var(--space);
    }



 }

</style>
