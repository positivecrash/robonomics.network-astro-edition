---
import { Image } from 'astro:assets';
import RiscV1 from "../../assets/images/hardware-2025/riscv/RiscV-Layout-1.webp"
import RiscV2 from "../../assets/images/hardware-2025/riscv/RiscV-Layout-2.webp"
import RiscV3 from "../../assets/images/hardware-2025/riscv/RiscV-Layout-3.webp"
import RiscV4 from "../../assets/images/hardware-2025/riscv/RiscV-Layout-4.webp"
import RiscV5 from "../../assets/images/hardware-2025/riscv/RiscV-Layout-5.webp"
import RiscV6 from "../../assets/images/hardware-2025/riscv/RiscV-Layout-6.webp"
import RiscV7 from "../../assets/images/hardware-2025/riscv/RiscV-Layout-7.webp"
import RiscV8 from "../../assets/images/hardware-2025/riscv/RiscV-Layout-8.webp"

const images = [
  RiscV1,
  RiscV2,
  RiscV3,
  RiscV4,
  RiscV5,
  RiscV6,
  RiscV7,
  RiscV8
];


const { noanimation = false,  classList, ...attrs} = Astro.props;
---

<div class=`model ${classList} ${noanimation ? 'model-noanimation' : ''}` id="riscv" aria-label="3d model for open-source server Risc-V" {...attrs}>
  {images.map((src, index) => (
    <Image src={src} alt={`Risc-V Layout ${index + 1}`} loading="lazy" />
  ))}
</div>

<script>
  const handleIntersection = (entries) => {
    entries.forEach((entry) => {
      if (entry.target) {
        entry.target.classList.toggle('in-viewport', entry.isIntersecting);
      }
    });
  };

  window.addEventListener('load', () => {
    const observer = new IntersectionObserver(handleIntersection, {
      rootMargin: '-200px 0px',
    });

    const modelElement = document.querySelector('#riscv');
    if (modelElement) {
      observer.observe(modelElement);
    }
  });
</script>

<style>
@property --koef {
  syntax: '<number>';
  initial-value: 0;
  inherits: false;
}

@keyframes openmodel {
  100% { --koef: 1; }
}

@keyframes closemodel {
  0% { --koef: 1; }
  100% { --koef: 0; }
}

.model {
  --opengap: 10px;
  position: relative;
  width: 100%;
  max-width: 500px;
}

.model img {
  display: block;
  width: 100%;
  height: 100%;
  margin-bottom: calc(var(--opengap) * 8 * var(--koef));
  animation: openmodel 1s ease-in-out forwards;
}


.model:not(.model-noanimation) img {
    animation: openmodel 1s ease-in-out forwards;
  }

.model.model-noanimation img {
  --opengap: 0px;
  --koef: 1;
}

.model:not(.model-noanimation).in-viewport img {
  animation: closemodel 0.5s linear 0s forwards;
}

.model.in-viewport img {
  animation: closemodel 0.5s linear forwards;
}

.model img:not(:first-child) {
  position: absolute;
  left: 0;
  top: 0;
}

.model img:nth-child(1) {
  position: relative;
  z-index: 8;
}

.model img:nth-child(2) {
  z-index: 7;
  transform: translateY(calc(var(--opengap) * var(--koef) * 1));
}

.model img:nth-child(3) {
  z-index: 6;
  transform: translateY(calc(var(--opengap) * var(--koef) * 4));
}

.model img:nth-child(4) {
  z-index: 5;
  transform: translateY(calc(var(--opengap) * var(--koef) * 3));
}

.model img:nth-child(5) {
  z-index: 3;
  transform: translateY(calc(var(--opengap) * var(--koef) * 4));
}

.model img:nth-child(6) {
  z-index: 4;
  transform: translateY(calc(var(--opengap) * var(--koef) * 5));
}

.model img:nth-child(7) {
  z-index: 2;
  transform: translateY(calc(var(--opengap) * var(--koef) * 6));
}

.model img:nth-child(8) {
  z-index: 1;
  transform: translateY(calc(var(--opengap) * var(--koef) * 7));
}
</style>