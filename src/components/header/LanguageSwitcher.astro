---
import { getLocale } from "astro-i18n-aut";

const locale = getLocale(Astro.url);
const localesList = ["ar","de","el","en","es","fr","it","ja","ko","nl","pt","ru","uk","zh"]; // Replace with your actual locales
const translated = false; // Set based on your requirements
let initialLocale = locale ? locale : 'en';
---

<div class="select-wrapper" id="select-wrapper">
  <select id="locale-select" aria-label="choose preferably language" tabindex="0">
    {localesList.map((item) => (
      <option value={item} selected={item === initialLocale}>
        {item}
      </option>
    ))}
  </select>
  {initialLocale !== 'en' && !translated && <span>AI</span>}
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Ensure localStorage is available before accessing it
    const localeSelect = document.getElementById('locale-select');

    const path = window.location.href;
    let splitPath = path.split('/');
    let newPath = '';
    const allLanguages = ["ar","de","el","en","es","fr","it","ja","ko","nl","pt","ru","uk","zh"];

    const changeURL = (newLocale) => {
      // splitting paths according to chosen locale
			if(allLanguages.includes(splitPath[3]) && newLocale !== 'en') {
				splitPath = path.replace(`${splitPath[3]}`, '/').split('/')
				newPath = `/${newLocale}/` + splitPath.slice(5, splitPath.length - 1).join("/") + '/';
			} else if (newLocale === 'en') {
				splitPath = path.replace(splitPath[3], '/').split('/')
				if(splitPath.slice(4, splitPath.length - 1).length) {
					newPath = splitPath.slice(4, splitPath.length - 1).join("/") + '/';
				} else {
					newPath = '/' + splitPath.slice(4, splitPath.length - 1).join("/") + '/';
				}
			} else {
				newPath = `/${newLocale}/` + splitPath.slice(3, splitPath.length - 1).join("/") + '/';
			}

      window.location.href = newPath;
    }

    localeSelect.addEventListener('change', (event) => {
      const newLocale = event.target.value;

      if (typeof localStorage !== 'undefined') {
        localStorage.setItem('locale', newLocale); // Store the selected locale
      }
      changeURL(newLocale)

    });

    if(localStorage.getItem('locale') && !path.includes(localStorage.getItem('locale')) && localStorage.getItem('locale') !== 'en' ) {
      changeURL(localStorage.getItem('locale'))
      return
    }
  });
</script>


<style>

  .select-wrapper {
    position: relative;
  }

  .select-wrapper span{
    position: absolute;
    top: 2px;
    right: -5px;
    width: 25px;
    height: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: calc(var(--base-font-size) * 0.6);
    font-weight: 600;
    color: var(--color-dark);
    z-index: -1;
  }

  select {
    --border-width: 0;
    --input-padding: .2rem;
    text-transform: uppercase;
    font-size: 80%;
  }
</style>