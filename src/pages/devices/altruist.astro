---
import Layout from '../../layouts/Layout.astro';

// data
import devices from '../../data/devices.js';

// components import 
import DeviceBuySection from '../../components/blocks/DevicesBuySection.astro';
import ModelAltruist from '../../components/3dmodels/Altruist.astro';

// images

// Filter products to get the current one
const altruist = devices.products.filter(product => product.code === 'altruist');

---

<Layout 
  title={altruist[0].title} 
  description="Experience the power of true DePIN (Decentralized Physical Infrastructure Network) — a revolutionary technological movement brought to life and thriving with Robonomics."
  ogImage="/og-pics/devices-altruist.webp"
  pageTitle={altruist[0].title} 
  backlink={{title: 'All hardware', link: '/devices/', label: 'Go to all hardware'}}
>

  <DeviceBuySection price="$95">
    <ModelAltruist vertical noanimation class="model-hide-mobile" />
    <ModelAltruist noanimation class="model-hide"/>
  </DeviceBuySection>

  <article class="layout layout__content space-b-2">
    <p>Join the movement with an open-source hardware sensor integrated into a decentralized map. Share and access noise, dust, and temperature data from other independent sensors nearby. Forget corporate servers—this data is securely distributed worldwide through innovative Web3 technology.</p>
    <p>
      Experience the power of true DePIN (Decentralized Physical Infrastructure Network) — a revolutionary technological movement brought to life and thriving for years on our
      <a aria-label="go to decentralized sensor map" href="https://sensors.social/" target="_blank">decentralized sensor map</a>.
    </p>
  </article>

  <h2 class="layout title-lined"><span>3 ways to use it</span></h2>

  <article class="layout space-b-2">
    <div class="grid-3">
      <section class="oldy">
        <h5 class="space-b-05">Monitor Air Quality</h5>
        <p>
          Access <strong>noise, dust, and temperature data</strong> from other independent sensors on our
          <a class="highlight" aria-label="go to decentralized sensor map" href="https://sensors.social/" target="_blank">decentralized sensor map</a>.
        </p>
        <p>Connect your device as simple as other smart devices and share your environmental outdoor data with community.</p>
        <a class="highlight" aria-label="check our firmware" href="https://github.com/airalab/altruist-firmware" target="_blank">Check open-source sensor firmware on GitHub</a>
      </section>

      <section class="oldy">
        <h5 class="space-b-05">Operate your own Data Server +</h5>
        <p>
          Data processing is always a sensitive issue. That's why we offer a fully open-source
          <a class="highlight" href="https://github.com/airalab/sensors-connectivity" aria-label="check open source connectivity module" target="_blank">connectivity module</a>  
          giving you the freedom to choose which servers to use for processing. No proprietary clouds, no hidden code.
        </p>
        <p>
          Keep in mind, you can join the
          <a class="highlight" aria-label="go to decentralized sensor map" href="https://sensors.social/" target="_blank">global decentralized sensor map</a> 
          even with a sensor connected through your own server!
        </p>
      </section>

      <section class="oldy">
        <h5 class="space-b-05">Run your own Interactive Map ++</h5>
        <p>
          Love the idea of a decentralized map but want to customize it with extra layouts and become an administrator of new sovereign sensor infrastructure? You can deploy
          <a href="https://github.com/airalab/sensors.social/" aria-label="GitHub Repository for the map" class="highlight" target="_blank">your own version by forking</a> 
          our open-source code on GitHub (be sure to check the license type). Remember to use open-source resources responsibly.
        </p>
      </section>
    </div>
  </article>

  <h2 class="layout title-lined"><span>Device Specifications</span></h2>

  <article class="layout layout__text space-b-2">
    <ul>
      <li><b>Input Voltage:</b> AC 100-240V 50/60Hz</li>
      <li><b>Wireless protocol:</b> Supports 2.4GHz Wi-Fi 6 (802.11 b/g/n) and Bluetooth 5 (LE), Zigbee with onboard antenna</li>
      <li>
        Equipped with a high-performance <b>32-bit RISC-V processor</b> with clock speed up to 160 MHz, and a low-power 32-bit RISC-V processor with clock speed up to 20MHz
      </li>
      <li><b>Memory:</b> 320KB ROM, 512KB of HP SRAM, 16KB LP SRAM and 4MB Flash memory</li>
      <li><b>USB-C</b> for firmware development and updates</li>
      <li><b>PM sensor:</b> SDS011 laser PM2.5/PM10 sensor</li>
      <li><b>Supported sensors:</b> T&H: SHT3X,BME280,HTU21D; Noise Level Sensor: I2S INMP441; Geiger counter : Radsens.</li>
    </ul>
  </article>

  <h2 class="layout title-lined"><span>Help & support</span></h2>

  <article class="layout layout__text space-b-2">
    <details>
      <summary class="text-center">Steps to set up your Connectivity</summary>

      <p>
        With Robonomics decentralized map you can use Robonomics Connectivity or create your own Connectivity Service.
        <b>Robonomics Connectivity</b>: Robonomics established three Connectivity hubs to ensure a stable connection. This option switched on by default on the station.
        <b>Your own Connectivity</b>: You may launch your own hub for receiving data from Altruist Civil Station and further processing.
      </p>

      <ol>
        <li>
          <p><b>Deploy Connectivity</b></p>
          <p>Technical requirements:</p>
          <ul class="list-smallgap">
            <li>2 CPU cores;</li>
            <li>4 GB RAM;</li>
            <li>40 GB storage;</li>
            <li>Static IP.</li>
          </ul>
          <p>
            Than set up
            <a aria-label="see open source connectivity module" href="https://github.com/airalab/sensors-connectivity" target="_blank">connectivity module</a> 
            and follow
            <a aria-label="check the instruction for connectivity" href="https://robonomics.academy/en/learn/sensors-connectivity-course/sensors-connectivity-module/" target="_blank">the instructions</a>.
          </p>
        </li>

        <li>
          <p><b>Connect a station to your connectivity</b></p>
          <ol class="list-smallgap">
            <li>Open your sensor settings by its IP.</li>
            <li>Go to APIs settings.</li>
            <li>Check the checkbox for sending data to custom API and fill corresponding fields (server IP, ports, etc.).</li>
          </ol>
        </li>

        <li>
          <p><b>Join with your setup to global map (optional)</b></p>
          <p>
            If you want to publish data to 
            <a aria-label="see the sensors map" href="https://sensors.social/" target="_blank">the global map</a>, 
            you need to make two pull requests:
          </p>

          <ol class="list-smallgap">
            <li>
              Add IPFS ID of your Connectivity to agents list of sensor map:
              <a aria-label="check agents.json file" href="https://github.com/airalab/sensors.social/blob/master/src/agents.json" class="text-break" target="_blank">
                https://github.com/airalab/sensors.social/blob/master/src/agents.json
              </a>
            </li>
            <li>
              Add parachain address of your Connectivity to template agents list of long-term storage server:
              <a aria-label="check agents.template.json file" href="https://github.com/airalab/RoSeMAN/blob/master/config/agents.template.json" class="text-break" target="_blank">
                https://github.com/airalab/RoSeMAN/blob/master/config/agents.template.json
              </a>
            </li>
          </ol>
        </li>
      </ol>
    </details>

    <details>
      <summary class="text-center">Steps for launching your own map</summary>
      <ol>
        <li>
          <p><b>Deploy web interface</b></p>

          <ol class="list-smallgap">
            <li>
              Fork the map repository:
              <a href="https://github.com/airalab/sensors.social" aria-label="see the sensors map repository" target="_blank">
                https://github.com/airalab/sensors.social
              </a>
            </li>
            <li>Edit the settings to customize your map, including the domain, provider, starting viewpoint, and your connectivity IPFS ID for the list of agents.</li>
            <li>Deploy your own version of the web interface and begin receiving real-time data from your sensor.</li>
          </ol>

          <p>
            Full guide here:
            <a aria-label="see full guide" href="https://github.com/airalab/sensors.social?tab=readme-ov-file#setup-your-own-map" target="_blank">
              https://github.com/airalab/sensors.social?tab=readme-ov-file#setup-your-own-map
            </a>
          </p>
        </li>

        <li>
          <p><b>Launch long-term storage</b></p>
          <p>
            Simply collecting data from sensors is not enough; it needs to be processed. Tweak a server for collecting sensor’s data based on with open-source node.js software
            <a aria-label="check node.js software for sensors" href="https://github.com/airalab/RoSeMAN" target="_blank">
              Robonomics Sensors Measure Analytics and Archive Node (RoSeMAN)
            </a> 
            and get your own working server for long-term map data storage.
          </p>
          <p>Technical requirements:</p>
          <ul class="list-smallgap">
            <li>2 CPU cores;</li>
            <li>4 GB RAM;</li>
            <li>40 GB storage;</li>
            <li>Static IP.</li>
          </ul>
          <p>Steps for launching a storage:</p>
          <ol class="list-smallgap">
            <li>
              Fork the RoSeMAN repository: 
              <a href="https://github.com/airalab/RoSeMAN" aria-label="check the roseman repository" target="_blank">
                https://github.com/airalab/RoSeMAN
              </a>
            </li>
            <li>Choose Docker or Node.js (required MongoDB database) version.</li>
            <li>Add a parachain address of your Connectivity to agents list.</li>
            <li>Add RoSeMAN domain to remote provider of map.</li>
            <li>Run the project.</li>
          </ol>
        </li>
      </ol>
    </details>
  </article>

  
</Layout>